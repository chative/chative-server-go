// Code generated by goctl. DO NOT EDIT!
// Source: register.proto

package regiter

import (
	"context"

	"chative-server-go/rpcserver/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	SendSMSRequest    = pb.SendSMSRequest
	SendSMSResponse   = pb.SendSMSResponse
	VerifySMSRequest  = pb.VerifySMSRequest
	VerifySMSResponse = pb.VerifySMSResponse

	Regiter interface {
		SendSMS(ctx context.Context, in *SendSMSRequest, opts ...grpc.CallOption) (*SendSMSResponse, error)
		VerifySMS(ctx context.Context, in *VerifySMSRequest, opts ...grpc.CallOption) (*VerifySMSResponse, error)
	}

	defaultRegiter struct {
		cli zrpc.Client
	}
)

func NewRegiter(cli zrpc.Client) Regiter {
	return &defaultRegiter{
		cli: cli,
	}
}

func (m *defaultRegiter) SendSMS(ctx context.Context, in *SendSMSRequest, opts ...grpc.CallOption) (*SendSMSResponse, error) {
	client := pb.NewRegiterClient(m.cli.Conn())
	return client.SendSMS(ctx, in, opts...)
}

func (m *defaultRegiter) VerifySMS(ctx context.Context, in *VerifySMSRequest, opts ...grpc.CallOption) (*VerifySMSResponse, error) {
	client := pb.NewRegiterClient(m.cli.Conn())
	return client.VerifySMS(ctx, in, opts...)
}
