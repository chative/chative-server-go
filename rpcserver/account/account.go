// Code generated by goctl. DO NOT EDIT!
// Source: account.proto

package account

import (
	"context"

	"chative-server-go/rpcserver/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CheckEmailVcodeRequest  = pb.CheckEmailVcodeRequest
	CheckEmailVcodeResponse = pb.CheckEmailVcodeResponse
	DelUserHashRequest      = pb.DelUserHashRequest
	DelUserHashResponse     = pb.DelUserHashResponse
	DeleteAccReq            = pb.DeleteAccReq
	DeleteAccResp           = pb.DeleteAccResp
	DisableSearchRequest    = pb.DisableSearchRequest
	DisableSearchResponse   = pb.DisableSearchResponse
	GenEmailVcodeRequest    = pb.GenEmailVcodeRequest
	GenEmailVcodeResponse   = pb.GenEmailVcodeResponse
	GetUserProfileRequest   = pb.GetUserProfileRequest
	GetUserProfileResponse  = pb.GetUserProfileResponse
	HashUserMetaRequest     = pb.HashUserMetaRequest
	HashUserMetaResponse    = pb.HashUserMetaResponse
	InitUserProfileRequest  = pb.InitUserProfileRequest
	InitUserProfileResponse = pb.InitUserProfileResponse
	SyncProfileRequest      = pb.SyncProfileRequest
	SyncProfileResponse     = pb.SyncProfileResponse

	Account interface {
		SyncProfile(ctx context.Context, in *SyncProfileRequest, opts ...grpc.CallOption) (*SyncProfileResponse, error)
		GenEmailVerificationCode(ctx context.Context, in *GenEmailVcodeRequest, opts ...grpc.CallOption) (*GenEmailVcodeResponse, error)
		CheckEmailVerificationCode(ctx context.Context, in *CheckEmailVcodeRequest, opts ...grpc.CallOption) (*CheckEmailVcodeResponse, error)
		HashUserMeta(ctx context.Context, in *HashUserMetaRequest, opts ...grpc.CallOption) (*HashUserMetaResponse, error)
		InitUserProfile(ctx context.Context, in *InitUserProfileRequest, opts ...grpc.CallOption) (*InitUserProfileResponse, error)
		GetUserProfile(ctx context.Context, in *GetUserProfileRequest, opts ...grpc.CallOption) (*GetUserProfileResponse, error)
		DelUserHash(ctx context.Context, in *DelUserHashRequest, opts ...grpc.CallOption) (*DelUserHashResponse, error)
		DisableSearch(ctx context.Context, in *DisableSearchRequest, opts ...grpc.CallOption) (*DisableSearchResponse, error)
		DeleteAccount(ctx context.Context, in *DeleteAccReq, opts ...grpc.CallOption) (*DeleteAccResp, error)
	}

	defaultAccount struct {
		cli zrpc.Client
	}
)

func NewAccount(cli zrpc.Client) Account {
	return &defaultAccount{
		cli: cli,
	}
}

func (m *defaultAccount) SyncProfile(ctx context.Context, in *SyncProfileRequest, opts ...grpc.CallOption) (*SyncProfileResponse, error) {
	client := pb.NewAccountClient(m.cli.Conn())
	return client.SyncProfile(ctx, in, opts...)
}

func (m *defaultAccount) GenEmailVerificationCode(ctx context.Context, in *GenEmailVcodeRequest, opts ...grpc.CallOption) (*GenEmailVcodeResponse, error) {
	client := pb.NewAccountClient(m.cli.Conn())
	return client.GenEmailVerificationCode(ctx, in, opts...)
}

func (m *defaultAccount) CheckEmailVerificationCode(ctx context.Context, in *CheckEmailVcodeRequest, opts ...grpc.CallOption) (*CheckEmailVcodeResponse, error) {
	client := pb.NewAccountClient(m.cli.Conn())
	return client.CheckEmailVerificationCode(ctx, in, opts...)
}

func (m *defaultAccount) HashUserMeta(ctx context.Context, in *HashUserMetaRequest, opts ...grpc.CallOption) (*HashUserMetaResponse, error) {
	client := pb.NewAccountClient(m.cli.Conn())
	return client.HashUserMeta(ctx, in, opts...)
}

func (m *defaultAccount) InitUserProfile(ctx context.Context, in *InitUserProfileRequest, opts ...grpc.CallOption) (*InitUserProfileResponse, error) {
	client := pb.NewAccountClient(m.cli.Conn())
	return client.InitUserProfile(ctx, in, opts...)
}

func (m *defaultAccount) GetUserProfile(ctx context.Context, in *GetUserProfileRequest, opts ...grpc.CallOption) (*GetUserProfileResponse, error) {
	client := pb.NewAccountClient(m.cli.Conn())
	return client.GetUserProfile(ctx, in, opts...)
}

func (m *defaultAccount) DelUserHash(ctx context.Context, in *DelUserHashRequest, opts ...grpc.CallOption) (*DelUserHashResponse, error) {
	client := pb.NewAccountClient(m.cli.Conn())
	return client.DelUserHash(ctx, in, opts...)
}

func (m *defaultAccount) DisableSearch(ctx context.Context, in *DisableSearchRequest, opts ...grpc.CallOption) (*DisableSearchResponse, error) {
	client := pb.NewAccountClient(m.cli.Conn())
	return client.DisableSearch(ctx, in, opts...)
}

func (m *defaultAccount) DeleteAccount(ctx context.Context, in *DeleteAccReq, opts ...grpc.CallOption) (*DeleteAccResp, error) {
	client := pb.NewAccountClient(m.cli.Conn())
	return client.DeleteAccount(ctx, in, opts...)
}
